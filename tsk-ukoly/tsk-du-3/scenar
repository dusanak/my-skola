Dobrý den,
dnes vám budu prezentovat své výkonnostní testy. Původně jsem chtěl testovat Android aplikaci, kterou jsem testoval v předchozích dvou úkolech. Aplikace se ukázala ovšem jako nevhodná tím, že využívá přihlašování pomocí Firebase, což probíhá mimo komunikaci klienta a serveru, klient se přihlásí u společnosti Google a server si následně klienta podle toho ověří. Toto by bylo jen těžko simulovatelné pomocí JMeteru. Zároveň se ukázala jako značná nevýhoda nemožnost využít Test Script Recorderu JMeteru pro Android aplikace, což by dále značně ztížilo jakoukoliv práci. Rozhodl jsem se tedy pro testování Vámi poskytnutého obchodu ZenCart.

Napsal jsem tři uživatele softwaru. Zákazníka který nějakou konkrétní věc kupuje, zákazníka, který se registruje a zákazníka, který jenom brouzdá a přidává věci do košíku.

Začnu nakupujícím zákazníkem. Ačkoli tento zákazník má zaznamenaných nejvíce kroků, jedná se o nejspíš nejjednoduššího zákazníka po stránce použitých fičur. Tento zákazník se přihlási, zvolí si produkt a postupně se proklikává formuláři v obchodě, až si tento produkt objedná. U tohoto zákazníka jsem využil asserty, které kontrolují stránky na kterých se nacházím a dále extraktory regulární výrazů, které extrahují bezpečnostní token z předchozích odpovědí webu pro využití v dalších dotazech.

Další zákazník je zákazník, který se registruje. Tento zákazník přišel na web pouze s tím, že se chce zaregistrovat. Klika tedy na tlačítko Log In a tam se následně registruje. Podobně jako u předchozího zákazníka využívám asserty pro kontrolu vrácené zprávy a kontrolu toho, na jaké stránce se nacházím. Dále také extrahuju bezpečnostní token pro účely registrace. Co je tu již ovšem navíc, je generování nových emailových adres v závislosti na momentálním čase a náhodné proměnné, jelikož email při registraci musí být unikátní.

Poslední zákazník je zákazník po webu brouzdající. Tento zákazník po přístupu na web vstoupí do některé kategorie. Kategorie jsou uloženy v csv souboru, z nějž si zákazník kategorii volí. Následně si náhodně vygeneruje id pro volbu produktu. Tato produkt id generuju v rozsahu 1 až 2000. To je dáno tím, že jsem zvolil kategorie, které vytvořili další uživatelé tohoto webu a tyto kategorie často obsahují velké množství produktů. Existuje-li zvolený produkt, pokusím se jej přidat do košíku. Pokud se to povede, zákazník svou práci končí. Pokud ovšem buď zvolený produkt neexistuje, nebo jej nelze přidat do košíku, zákazník si vygeneruje nové produkt id a pokouší se o to samé u dalšího produktu. V tomto loop controlleru se o to zákazník pokusí maximálně  desetkrát. Pokud se mu to nepovede ani na desátý pokus, zákazník svou práci končí. U tohoto zákazníka jsem využil asi nejvíce fičur JMeteru. Využil jsem zde nejen náhodné proměnné a extrakci na základě regulárního výrazu, ale i loop a if controllery a načítání dat z csv souboru.

Dále ve svém úkolu používám grafy a to graf času odpovědi, graf aktivních vláken a graf perfmon, který sbírá metriky ze serveru. Na základě svých testů jsem vypozoroval, že velmi dlouho trvá dokončení registrace uživatele a dokončení objednávky. Je to vidět i na grafu času odpovědi. Toto je také důvodem, proč jsem rozdělil objednávky a registraci uživatelů mezi dva typy zákazníků. Být to u jednoho typu zákazníka, test by trval poměrně dlouho.

Toto je za mě vše,
děkuji za pozornost.
